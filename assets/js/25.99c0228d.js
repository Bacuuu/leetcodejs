(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{306:function(t,e,a){"use strict";a.r(e);var s=a(14),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"题目描述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[t._v("#")]),t._v(" 题目描述")]),t._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"https://leetcode.cn/problems/reverse-linked-list/",target:"_blank",rel:"noopener noreferrer"}},[t._v("反转链表"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("题目简述")]),t._v(" "),e("p",[t._v("给你单链表的头节点 "),e("code",[t._v("head")]),t._v(" ，请你反转链表，并返回反转后的链表。")]),t._v(" "),e("p",[t._v("示例1:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("输入：head = [1,2,3,4,5]\n输出：[5,4,3,2,1]\n")])])]),e("p",[t._v("示例2:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("输入：head = [1,2]\n输出：[2,1]\n")])])])]),t._v(" "),e("h2",{attrs:{id:"分类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[t._v("#")]),t._v(" 分类")]),t._v(" "),e("p",[e("code",[t._v("简单")]),t._v(" "),e("code",[t._v("链表")])]),t._v(" "),e("h2",{attrs:{id:"思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[t._v("#")]),t._v(" 思路")]),t._v(" "),e("h4",{attrs:{id:"思路1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#思路1"}},[t._v("#")]),t._v(" 思路1")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {ListNode} head\n * @return {ListNode}\n */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("reverseList")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("head")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先读下一个，再将指向反向")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// curNode -> next -> _next")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" curNode "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" head\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("curNode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" curNode\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" next "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n  head"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" _next "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" next"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n    next"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" curNode\n    curNode "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" next\n    next "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _next\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" curNode\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("ul",[e("li",[t._v("问题思路\n"),e("ul",[e("li",[t._v("题目的意思就是将链表的节点指向反向，我们先用最小的例子来看思路是怎样的\n"),e("ul",[e("li",[t._v("假设有个链表为"),e("code",[t._v("A -> B -> C")]),t._v("，我们只能从"),e("code",[t._v("A")]),t._v("节点入手")]),t._v(" "),e("li",[t._v("假设我们一次只处理两个节点的关系，"),e("code",[t._v("A")]),t._v("和"),e("code",[t._v("B")]),t._v("。我们可以轻易的转换为"),e("code",[t._v("A <- B")]),t._v("，但是当进行下一步时，我们已经无法找到"),e("code",[t._v("C")]),t._v("节点。")]),t._v(" "),e("li",[t._v("所以我们一次要处理三个节点。\n"),e("ul",[e("li",[t._v("先将三个节点都记录下来（"),e("code",[t._v("curNode(A)")]),t._v("、"),e("code",[t._v("next(B)")]),t._v("、"),e("code",[t._v("_next(C)")]),t._v("）。")]),t._v(" "),e("li",[t._v("完成"),e("code",[t._v("A <- B")]),t._v("的关系转换")]),t._v(" "),e("li",[t._v("将"),e("code",[t._v("curNode")]),t._v("移动到"),e("code",[t._v("B")]),t._v("，"),e("code",[t._v("next")]),t._v("移动到"),e("code",[t._v("C")])])])]),t._v(" "),e("li",[t._v("边界处理，当"),e("code",[t._v("next")]),t._v("为"),e("code",[t._v("null")]),t._v("时说明当前节点"),e("code",[t._v("(curNode)")]),t._v("已经为最后一个节点")]),t._v(" "),e("li",[t._v("还需要单独处理指针头为空的情况，否则取其下一个节点会报错。")])])])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);